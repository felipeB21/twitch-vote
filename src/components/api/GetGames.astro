---
interface Game {
  id: number;
  name: string;
  box_art_url: string;
}

const clientId = import.meta.env.TWITCH_CLIENT_ID;
const clientSecret = import.meta.env.TWITCH_CLIENT_SECRET;

const token = await fetch(
  `https://id.twitch.tv/oauth2/token?client_id=${clientId}&client_secret=${clientSecret}&grant_type=client_credentials`,
  {
    method: "POST",
  }
);

const res = await token.json();
const accessToken = res.access_token;

const response = await fetch("https://api.twitch.tv/helix/games/top", {
  method: "GET",
  headers: {
    Authorization: `Bearer ${accessToken}`,
    "Client-Id": import.meta.env.TWITCH_CLIENT_ID,
  },
});

const data = await response.json();
---

<ul
  class="grid xl:grid-cols-5 md:grid-cols-4 sm:grid-cols-3 grid-cols-2 gap-10"
>
  {
    data.data.map((game: Game) => (
      <li>
        <div class="flex flex-col items-center gap-1">
          <p class="text-sm max-w-[300px]">{game.name}</p>
          <button>
            <img
              class="streamer-image"
              src={game.box_art_url}
              alt={game.name}
              loading="lazy"
            />
          </button>
        </div>
      </li>
    ))
  }
</ul>
